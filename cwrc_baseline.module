<?php

/**
 * @file
 * Code for the cwrc_baseline feature.
 */

include_once 'cwrc_baseline.features.inc';

/* Hooks. */

/**
 * Implements hook_menu().
 */
function cwrc_baseline_menu() {
  $items = array();
  $items['front'] = array(
    'title' => 'Front Page',
    'page callback' => 'cwrc_baseline_front',
    // No access restriction because anyone should be able to access the front
    // page of the site.
    'access callback' => TRUE,
  );
  $items['notfound'] = array(
    'title' => 'Page not found',
    'page callback' => 'cwrc_baseline_404',
    // No access restriction because anyone should be able to get a 404 error.
    'access callback' => TRUE,
  );
  return $items;
}

/* Menu callbacks. */

/**
 * Page callback: Display a blank front page.
 */
function cwrc_baseline_front() {
  return '';
}

/**
 * Page callback: Display a simple message for a 404 page.
 */
function cwrc_baseline_404() {
  return t("The requested page could not be found!");
}

/**
 * Implements hook_field_widget_info().
 */
function cwrc_baseline_field_widget_info() {
  return array(
    'orcid_textfield' => array(
      'label' => t('ORCID ID Textfield'),
      'field types' => array('text'),
    ),
  );
}

/**
 * Implements hook_field_formatter_info().
 */
function cwrc_baseline_field_formatter_info() {
  return array(
    'orcid_textfield' => array(
      'label' => t('ORCID ID'),
      'field types' => array('text'),
      'settings' => array(
        'as_link' => TRUE,
        'orcid_as_link_text' => TRUE,
        'open_new_window' => FALSE,
      ),
    ),
  );
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function cwrc_baseline_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $element = array();
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  if ($display['type'] === 'orcid_textfield') {
    $element['as_link'] = array(
      '#type' => 'checkbox',
      '#title' => t('Display the ORCID id as link.'),
      '#default_value' => $settings['as_link'],
    );
    $element['orcid_as_link_text'] = array(
      '#type' => 'checkbox',
      '#title' => t('Use the ORCID id as link text.'),
      '#default_value' => $settings['orcid_as_link_text'],
      '#states' => array(
        'invisible' => array(
          ':input[name="fields[field_orcid_id][settings_edit_form][settings][as_link]"]' => array('checked' => FALSE),
        ),
      ),
    );
    $element['open_new_window'] = array(
      '#type' => 'checkbox',
      '#title' => t('Open the link in a new window equivalent to add "_blank" attribute to <a> tag.'),
      '#default_value' => $settings['open_new_window'],
      '#states' => array(
        'invisible' => array(
          ':input[name="fields[field_orcid_id][settings_edit_form][settings][as_link]"]' => array('checked' => FALSE),
        ),
      ),
    );
  }

  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function cwrc_baseline_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $summary = '';
  if ($display['type'] === 'orcid_textfield') {
    $as_link = $settings['as_link'];
    if ($as_link) {
      $link_text = $settings['orcid_as_link_text'];
      $new_window = $settings['open_new_window'];
      $summary = t('Display as link with @url as link text. @new_window', array(
        '@url' => $link_text ? 'ORCID' : t('full url'),
        '@new_window' => $new_window ? t('Will open a new browser window.') : '',
      ));
    }
    else {
      $summary = t('Display the ORCID Id as plain text.');
    }
  }

  return $summary;
}

/**
 * Implements hook_field_formatter_view().
 */
function cwrc_baseline_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  $display_settings = $display['settings'];
  $pattern = '/\d{4}[\-]\d{4}[\-]\d{4}[\-][0-9X]{4}$/';

  if ($display['type'] === 'orcid_textfield') {
    foreach ($items as $delta => $item) {
      $output = _text_sanitize($instance, $langcode, $item, 'value');
      if (!empty($display_settings['as_link']) && preg_match($pattern, $output)) {
        $href = 'https://orcid.org/' . $output;
        $element[$delta] = array(
          '#type' => 'link',
          '#href' => $href,
          '#title' => !empty($display_settings['orcid_as_link_text']) ? $output : $href,
          '#options' => array(
            'absolute' => TRUE,
            'external' => TRUE,
            'attributes' => array(
              'title' => t('View @value profile page.', array(
                '@value' => $output,
              )),
            ),
          ),
        );

        if (!empty($display_settings['open_new_window'])) {
          $element[$delta]['#options']['attributes']['target'] = '_blank';
        }
      }
      else {
        $element[$delta] = array('#markup' => $output);
      }
    }
  }

  return $element;
}

/**
 * Implements hook_field_widget_form().
 */
function cwrc_baseline_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  if ($instance['widget']['type'] === 'orcid_textfield') {
    $path = drupal_get_path('module', 'cwrc_baseline');
    $element['value'] = array(
      '#type' => 'textfield',
      '#title' => $element['#title'],
      '#description' => $element['#description'],
      '#field_prefix' => 'https://orcid.org/',
      '#default_value' => isset($items[$delta]['value']) ? $items[$delta]['value'] : '',
      '#size' => 20,
      '#maxlength' => $field['settings']['max_length'],
      '#attributes' => array(
        'class' => array('text-full', 'text-orcid-element', 'masked'),
        'placeholder' => 'XXXX-XXXX-XXXX-XXXX',
        'pattern' => '[0-9]{4}[\-][0-9]{4}[\-][0-9]{4}[\-][0-9X]{4}$',
        'data-charset' => 'XXXX-XXXX-XXXX-XXX?',
        'title' => t('The ORCID iD is expressed as an https URI, i.e. the 16-digit identifier is preceded by "https://orcid.org/". A hyphen is inserted every 4 digits of the identifier to aid readability. The last character in the ORCID iD is a checksum. In accordance with ISO/IEC 7064:2003, MOD 11-2, this checksum must be "0" - "9" or "X", a capital letter X which represents the value 10.'),
      ),
      '#attached' => array(
        'js' => array(
          $path . '/js/estelle-input-masking/js/masking-input.js',
          $path . '/js/input-mask.js',
        ),
        'css' => array($path . '/js/estelle-input-masking/css/masking-input.css'),
      ),
      '#element_validate' => array(
        'cwrc_baseline_orcid_textfield_field_widget_validate',
      ),
    );
  }

  return $element;
}

/**
 * Element validate callback for the ORCID iD widget.
 *
 * @param array $element
 *   The element.
 * @param array $form_state
 *   The form state.
 *
 * @return array
 *   The element.
 */
function cwrc_baseline_orcid_textfield_field_widget_validate(array &$element, array &$form_state) {
  if ($element['#value'] !== '') {
    $label = $element['#title'];
    $value = $element['#value'];
    $url = 'https://orcid.org/' . $value;
    $pattern = '/\d{4}[\-]\d{4}[\-]\d{4}[\-][0-9X]{4}$/';

    if (!preg_match($pattern, $value)) {
      $title = $element['#attributes']['title'];
      form_error($element, t('@label is not a valid ORCID iD format. @title.', array(
        '@label' => $label,
        '@title' => $title,
      )));
    }
    elseif (strpos(@get_headers($url)[0], '200 OK') === FALSE) {
      form_error($element, t('@label is not a valid ORCID iD. @url could not be found!', array(
        '@label' => $label,
        '@url' => $url,
      )));
    }
  }

  return $element;
}
